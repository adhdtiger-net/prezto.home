#! /usr/bin/env zsh
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Detect terminal program and load appropriate shell integration

# # Ghostty shell integration for Bash. This should be at the top of your bashrc!
# if [ -n "${GHOSTTY_RESOURCES_DIR}" ]; then
#     builtin source "${GHOSTTY_RESOURCES_DIR}/shell-integration/zsh/ghostty-integration"
# fi

[[ -f ~/.config/zsh/aliases.zsh ]] && source ~/.config/zsh/aliases.zsh
[[ -f ~/.config/zsh/functions.zsh ]] && source ~/.config/zsh/functions.zsh
[[ -f ~/.config/zsh/starship.zsh ]] && source ~/.config/zsh/starship.zsh

### Need to taylor for Mac and Linux
# Load all .<app> files from .config/<app>.d directories
#if [ -d $ZDOTDIR ]; then
#  for file in $HOME/.config/zsh/*.zsh; do
#    source $file
#  done
#  for file in $HOME/.config/docker/*.docker; do
#    source $file
#  done
#  for file in $HOME/.config/git/*.git; do
#    source $file
#  done
#  for file in $HOME/.config/vim/*.vim; do
#    source $file
#  done
#fi

## Start things....
source <(fzf --zsh)
eval "$(zoxide init --cmd cd zsh)"
eval "$(starship init zsh)"
eval "$(atuin init zsh)"
eval "$(thefuck --alias)"
# eval "$(emplace init zsh)"

# For zsh subshells, add to ~/.zshrc.
printf '\eP$f{"hook": "SourcedRcFileForWarp", "value": { "shell": "zsh"}}\x9c'

export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
